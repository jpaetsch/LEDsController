The following communication protocol is used:

Bluetooth is used for now, Wifi module may be considered later us an upgrade

Android app sends to Arduino:
<------------------------>
ie. 24 bytes (the first one to specify the pattern and the rest for whatever parameters that
particular pattern uses)

There are two timeouts:

    1) A timeout per message is in place on the Arduino side so a partial or unexpected message is
    instantly cleared from the input buffer.  It will then simply keep using the last pattern that
    was sent and in this process no visual changes occur (ie. the failure will result in an error
    message logged but no visual LED response).

    2) There is also larger overall timeout that will turn off the lights if no successful pattern
    change has occurred (ie. after a few hours so that the lights will not just run indefinitely).

The Arduino will sent messages of variable length back as either:

    Error: <error-message>
    Status: <status-message>

    The first character 'E' or 'S' is retrieved by the Android app and it can choose to display
    them, log them, act on them, etc.

For logging purposes, there are different tags associated and logged with each activity:

    private static final String TAG = "<activity-name>";

    Log.e(TAG, "<error-message>");
    Log.e(TAG, "<error-message-and-exception-e>", e);
    Log.i(TAG, "<status-message>");

    .e should be used for error messages (including the thrown exception if that applies) while
    .i should be used for information or status messages
    Note that messages generated by the app and externally received messages will both be logged